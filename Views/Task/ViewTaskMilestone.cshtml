@model IEnumerable<WebSpaceApp.Models.ViewTaskModel>

@{
    ViewData["Title"] = "Task Manager";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<style>
    body {
        font-family: 'Segoe UI', Arial, sans-serif;
        margin: 0;
        padding: 0;
        background-color: #fafafa;
        color: #333;
    }

    .container {
        display: flex;
        height: 100vh;
    }

    .sidebar {
        width: 220px;
        background-color: whitesmoke;
        color: #fff;
        display: flex;
        flex-direction: column;
        padding: 20px;
    }

        .sidebar .logo {
            font-size: 22px;
            font-weight: bold;
            margin-bottom: 30px;
            color: black;
        }

        .sidebar .nav-list {
            list-style: none;
            padding: 0;
            margin: 0;
            flex-grow: 1;
        }

            .sidebar .nav-list li {
                padding: 12px 10px;
                margin-bottom: 8px;
                border-radius: 4px;
                cursor: pointer;
                transition: background 0.2s;
            }

                .sidebar .nav-list li:hover,
                .sidebar .nav-list li.active {
                    background-color: #ff8c00;
                    color: #212529;
                    font-weight: bold;
                }

    .main-content {
        flex: 1;
        padding: 20px;
        background-color: #ffffff;
        overflow-y: auto;
    }

    .logo {
        padding: 0 20px 20px;
        border-bottom: 1px solid #333;
        margin-bottom: 20px;
    }

        .logo h2 {
            color: black;
        }

    .menu-section {
        margin-bottom: 30px;
    }

    .menu-title {
        padding: 0 20px;
        font-size: 12px;
        text-transform: uppercase;
        color: #555;
        margin-bottom: 10px;
    }

    .menu-item {
        padding: 10px 20px;
        cursor: pointer;
        transition: background-color 0.3s;
        color: #e0e0e0;
    }

        .menu-item:hover {
            background-color: #333;
            color: #ffffff;
        }

        .menu-item.active {
            background-color: #333;
            color: #555;
            border-left: 3px solid #FFEB3B;
        }

    .integration-section {
        background-color: #fffde7;
        box-shadow: 0 2px 10px rgba(0,0,0,0.05);
        margin-bottom: 20px;
        overflow: hidden;
        border: 1px solid #eee;
    }

    .integration-header {
        padding: 15px 20px;
        border-bottom: 1px solid #eee;
        font-weight: bold;
        display: flex;
        justify-content: space-between;
        align-items: center;
        background-color: #333;
        color: #FFEB3B;
    }

    .integration-content {
        padding: 15px 20px;
        color: #666;
        font-size: 14px;
    }

    .action-buttons {
        display: flex;
        gap: 10px;
        margin-top: 15px;
    }

    .btn {
        padding: 8px 15px;
        border-radius: 4px;
        font-size: 12px;
        cursor: pointer;
        border: none;
        font-weight: 600;
        transition: all 0.3s;
    }

    .btn-primary {
        background-color: #333;
        color: #FFEB3B;
    }

        .btn-primary:hover {
            background-color: #000;
        }

    .btn-secondary {
        background-color: transparent;
        border: 1px solid #333;
        color: #333;
    }

        .btn-secondary:hover {
            background-color: #f5f5f5;
        }

    .projects-grid {
        display: grid;
        grid-template-columns: repeat(auto-fill, minmax(300px, 1fr));
        gap: 20px;
        margin-top: 20px;
    }

    .project-card {
        background-color: white;
        border-radius: 8px;
        box-shadow: 0 2px 10px rgba(0,0,0,0.05);
        padding: 20px;
        border: 1px solid #eee;
        transition: transform 0.3s, box-shadow 0.3s;
    }

        .project-card:hover {
            transform: translateY(-3px);
            box-shadow: 0 5px 15px rgba(0,0,0,0.1);
        }

    .project-title {
        font-weight: bold;
        margin-bottom: 10px;
        font-size: 16px;
        color: #333;
    }

    .project-meta {
        color: #666;
        font-size: 13px;
        margin-bottom: 15px;
    }

    .project-description {
        margin-bottom: 15px;
        font-size: 14px;
        color: #555;
    }

    .page-header {
        display: flex;
        justify-content: space-between;
        align-items: center;
        margin-bottom: 20px;
        padding-bottom: 15px;
        border-bottom: 1px solid #eee;
    }

    .page-title {
        font-size: 24px;
        font-weight: 600;
        color: #333;
    }

    .btn-create {
        background-color: #333;
        color: #FFEB3B;
        padding: 10px 20px;
    }

        .btn-create:hover {
            background-color: #000;
        }


    .progress-container {
        margin-bottom: 15px;
    }

    .progress-label {
        display: flex;
        justify-content: space-between;
        align-items: center;
        margin-bottom: 5px;
        font-size: 14px;
        color: #555;
        font-weight: 500;
    }

    .progress-bar-container {
        width: 100%;
        height: 12px;
        background-color: #e9ecef;
        border-radius: 6px;
        overflow: hidden;
        box-shadow: inset 0 1px 3px rgba(0,0,0,0.1);
    }

    .progress-bar {
        height: 100%;
        border-radius: 6px;
        transition: width 0.6s ease-in-out;
        background: linear-gradient(90deg, #28a745 0%, #20c997 50%, #17a2b8 100%);
        position: relative;
        overflow: hidden;
    }

        .progress-bar::after {
            content: '';
            position: absolute;
            top: 0;
            left: 0;
            bottom: 0;
            right: 0;
            background-image: linear-gradient( -45deg, rgba(255, 255, 255, .2) 25%, transparent 25%, transparent 50%, rgba(255, 255, 255, .2) 50%, rgba(255, 255, 255, .2) 75%, transparent 75%, transparent );
            background-size: 20px 20px;
            animation: progress-bar-stripes 1s linear infinite;
        }



        /* Different colors based on progress */
        .progress-bar.low-progress {
            background: linear-gradient(90deg, #dc3545 0%, #e74c3c 100%);
        }

        .progress-bar.medium-progress {
            background: linear-gradient(90deg, #ffc107 0%, #f39c12 100%);
        }

        .progress-bar.high-progress {
            background: linear-gradient(90deg, #28a745 0%, #20c997 100%);
        }

        .progress-bar.complete {
            background: linear-gradient(90deg, #28a745 0%, #20c997 50%, #17a2b8 100%);
        }

    .progress-percentage {
        font-weight: 600;
        color: #333;
    }

    /* No tasks message styling */
    .no-tasks-message {
        grid-column: 1/-1;
        text-align: center;
        font-size: 18px;
        color: #777;
        padding: 40px 0;
        font-weight: 500;
    }
</style>

<div class="container">
    <div class="sidebar">
        <div class="logo">Main Menu</div>
        <ul class="nav-list">
            <li class="active">
                <a href="@Url.Action("ViewTask", "Task")">View Task</a>
            </li>

            <li>
                <a href="@Url.Action("ViewForeManProgress", "Task")">View Progress</a>
            </li>

            <li>
                <a href="@Url.Action("LeaderboardView", "Task")">LeaderboardView</a>
            </li>

            <li>
                <a href="@Url.Action("NotificationView", "Task")">Notification</a>
            </li>

            <li>
                <a href="@Url.Action("Logout", "Account")">Log out</a>
            </li>
        </ul>
    </div>

    <!-- Main Content -->
    <div class="main-content">
        <div class="page-header">
            <h1 class="page-title">Task Manager:</h1>
            @* <button class="btn btn-create">+ Create Task</button> *@
        </div>

        <div class="projects-grid">
            @if (Model != null && Model.Any())
            {
                foreach (var task in Model)
                {
                    <div class="project-card">
                        <div class="project-title">@task.Description</div>
                        <div class="project-meta">
                            Created: @task.StartDate.ToString("MMMM dd, yyyy") |
                            Deadline: @task.EndDate.ToString("MMMM dd, yyyy")

                        </div>
                        <div class="progress-container">
                            <div class="progress-label">
                                <span>Progress</span>
                                <span class="progress-percentage">@((task.Progress ?? 0).ToString("F2"))%</span>
                                Priority: @task.Priority
                            </div>
                            <div class="progress-bar-container">
                                <div class="progress-bar @(
                                     (task.Progress ?? 0) >= 100 ? "complete" :
                                     (task.Progress ?? 0) >= 75 ? "high-progress" :
                                     (task.Progress ?? 0) >= 50 ? "medium-progress" :
                                     "low-progress"
                                                                                                                                )" style="width: @(task.Progress ?? 0) % "></div>
                    </div>
                </div>
                <div class="action-buttons">
                    @* <a href="@Url.Action("ViewTask", "Task", new { id = task.Id })" class="btn btn-primary">View Tasks</a>
                            <a href="@Url.Action("DocumentView", "Document")" class="btn btn-secondary">Updates</a> *@
                            
                            <a href="@Url.Action("MilestoneView", "Milestone", new { id = task.Id })" class="btn btn-primary">View Milestones</a>
                        </div>
                    </div>
                        }
            }
            else
            {
                <div class="no-tasks-message">
                    No available tasks for this project.
                </div>
            }
        </div>
    </div>
</div>

<!-- Assign Foreman Modal -->
<div class="modal fade" id="assignForemanModal" tabindex="-1" aria-labelledby="assignForemanModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <form id="assignForemanForm">
                <div class="modal-header">
                    <h5 class="modal-title" id="assignForemanModalLabel">Assign Foreman</h5>
                    <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                        <span aria-hidden="true">&times;</span>
                    </button>
                </div>
                <div class="modal-body">
                    <input type="hidden" id="taskId" name="taskId" />
                    <div class="form-group">
                        <label for="foremanSelect">Select Foreman:</label>
                        <select class="form-control" id="foremanSelect" name="foremanId">
                            <!-- Options will be populated via AJAX -->
                        </select>
                    </div>
                </div>
                <div class="modal-footer">
                    <button type="submit" class="btn btn-primary">Assign</button>
                    <button type="button" class="btn btn-secondary" data-dismiss="modal">Cancel</button>
                </div>
            </form>
        </div>
    </div>
</div>

<script>
    $('#assignForemanModal').on('show.bs.modal', function (event) {
        var button = $(event.relatedTarget);
        var taskId = button.data('task-id');
        $('#taskId').val(taskId);

        // Load foremen via AJAX
        $.ajax({
            url: '@Url.Action("GetForemen", "Milestone")',
            type: 'GET',
            success: function (data) {
                var $select = $('#foremanSelect');
                $select.empty();
                $.each(data, function (i, foreman) {
                    $select.append($('<option>', {
                        value: foreman.Id,
                        text: foreman.Name
                    }));
                });
            }
        });
    });

    // Submit form to assign foreman
    $('#assignForemanForm').submit(function (e) {
        e.preventDefault();
        var formData = $(this).serialize();

        $.post('@Url.Action("AssignForemanToTask", "Milestone")', formData, function (response) {
            if (response.success) {
                $('#assignForemanModal').modal('hide');
                location.reload(); // or update UI accordingly
            } else {
                alert("Error assigning foreman.");
            }
        });
    });
</script>
