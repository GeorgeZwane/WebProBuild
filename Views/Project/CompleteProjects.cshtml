@model IEnumerable<WebSpaceApp.Models.CreateProjectViewModel>
@{
    ViewData["Title"] = "CompleteProjects";
}

<style>
    body {
        font-family: 'Segoe UI', Arial, sans-serif;
        margin: 0;
        padding: 0;
        background-color: #fafafa;
        color: #333;
    }

    
    .director-container {
        display: flex;
        height: 100vh;
        overflow-y: auto;
    }

    .sidebar {
        width: 220px;
        background-color: whitesmoke;
        color: #fff;
        display: flex;
        flex-direction: column;
        padding: 20px;
    }

        .sidebar .logo {
            font-size: 22px;
            font-weight: bold;
            margin-bottom: 30px;
            color: black;
        }

        .sidebar .nav-list {
            list-style: none;
            padding: 0;
            margin: 0;
            flex-grow: 1;
        }

            .sidebar .nav-list li {
                padding: 12px 10px;
                margin-bottom: 8px;
                border-radius: 4px;
                cursor: pointer;
                transition: background 0.2s;
            }

                .sidebar .nav-list li:hover,
                .sidebar .nav-list li.active {
                    background-color: darkorange;
                    color: #212529;
                    font-weight: bold;
                }

    .director-main-content {
        flex: 1;
        overflow-y: auto;
        padding: 20px 40px;
        height: 100vh;
    }

    .logo {
        padding: 0 20px 20px;
        border-bottom: 1px solid #333;
        margin-bottom: 20px;
    }

        .logo h2 {
            color: #FFEB3B;
        }

    .menu-section {
        margin-bottom: 30px;
    }

    .menu-title {
        padding: 0 20px;
        font-size: 12px;
        text-transform: uppercase;
        color: #FFEB3B;
        margin-bottom: 10px;
    }

    .menu-item {
        padding: 10px 20px;
        cursor: pointer;
        transition: background-color 0.3s;
        color: #e0e0e0;
    }

        .menu-item:hover {
            background-color: #333;
            color: #ffffff;
        }

        .menu-item.active {
            background-color: #333;
            color: #FFEB3B;
            border-left: 3px solid #FFEB3B;
        }

    .integration-section {
        background-color: #fffde7;
        border-radius: 8px;
        box-shadow: 0 2px 10px rgba(0,0,0,0.05);
        margin-bottom: 20px;
        overflow: hidden;
        border: 1px solid #eee;
    }

    .integration-header {
        padding: 15px 20px;
        border-bottom: 1px solid #eee;
        font-weight: bold;
        display: flex;
        justify-content: space-between;
        align-items: center;
        background-color: #333;
        color: #FFEB3B;
    }

    .integration-content {
        padding: 15px 20px;
        color: #666;
        font-size: 14px;
    }

    .action-buttons {
        display: flex;
        gap: 10px;
        margin-top: 15px;
    }

    .btn {
        padding: 8px 15px;
        border-radius: 4px;
        font-size: 12px;
        cursor: pointer;
        border: none;
        font-weight: 600;
        transition: all 0.3s;
    }

    .btn-primary {
        background-color: #333;
        color: #FFEB3B;
    }

        .btn-primary:hover {
            background-color: #000;
        }

    .btn-secondary {
        background-color: transparent;
        border: 1px solid #333;
        color: #333;
    }

        .btn-secondary:hover {
            background-color: #f5f5f5;
        }

    .director-projects-grid {
        display: grid;
        grid-template-columns: repeat(auto-fill, minmax(300px, 1fr));
        gap: 20px;
        margin-top: 20px;
    }

    .director-project-card {
        background-color: white;
        border-radius: 8px;
        box-shadow: 0 2px 10px rgba(0,0,0,0.05);
        padding: 20px;
        border: 1px solid #eee;
        transition: transform 0.3s, box-shadow 0.3s;
    }

        .director-project-card:hover {
            transform: translateY(-3px);
            box-shadow: 0 5px 15px rgba(0,0,0,0.1);
        }

    .project-title {
        font-weight: bold;
        margin-bottom: 10px;
        font-size: 16px;
        color: #333;
    }

    .project-meta {
        color: #666;
        font-size: 13px;
        margin-bottom: 15px;
    }

    .project-description {
        margin-bottom: 15px;
        font-size: 14px;
        color: #555;
    }

    .page-header {
        display: flex;
        justify-content: space-between;
        align-items: center;
        margin-bottom: 20px;
        padding-bottom: 15px;
        border-bottom: 1px solid #eee;
    }

    .page-title {
        font-size: 24px;
        font-weight: 600;
        color: #333;
    }

    .btn-create {
        background-color: #333;
        color: #FFEB3B;
        padding: 10px 20px;
    }

        .btn-create:hover {
            background-color: #000;
        }

    /* Progress Bar Styles - Half Width */
    .progress-container {
        margin-bottom: 15px;
        display: flex;
        align-items: center;
        gap: 15px;
    }

    .progress-label {
        font-size: 14px;
        color: #555;
        font-weight: 500;
        min-width: 60px;
    }

    .progress-bar-wrapper {
        flex: 0 0 50%; /* Takes up exactly half the remaining space */
        display: flex;
        align-items: center;
        gap: 10px;
    }

    .progress-bar-container {
        flex: 1;
        height: 12px;
        background-color: #e9ecef;
        border-radius: 6px;
        overflow: hidden;
        box-shadow: inset 0 1px 3px rgba(0,0,0,0.1);
        position: relative;
    }

    .progress-bar {
        height: 100%;
        border-radius: 6px;
        transition: width 0.6s ease-in-out;
        position: relative;
        overflow: hidden;
    }

        /* Progress colors based on percentage */
        .progress-bar.low-progress {
            background: linear-gradient(90deg, #dc3545 0%, #e74c3c 100%);
        }

        .progress-bar.medium-progress {
            background: linear-gradient(90deg, #ffc107 0%, #f39c12 100%);
        }

        .progress-bar.high-progress {
            background: linear-gradient(90deg, #28a745 0%, #20c997 100%);
        }

        .progress-bar.complete {
            background: linear-gradient(90deg, #28a745 0%, #20c997 50%, #17a2b8 100%);
        }

        /* Subtle animation for visual appeal */
        .progress-bar::after {
            content: '';
            position: absolute;
            top: 0;
            left: 0;
            bottom: 0;
            right: 0;
            background-image: linear-gradient( -45deg, rgba(255, 255, 255, .15) 25%, transparent 25%, transparent 50%, rgba(255, 255, 255, .15) 50%, rgba(255, 255, 255, .15) 75%, transparent 75%, transparent );
            background-size: 20px 20px;
            animation: progress-bar-stripes 2s linear infinite;
        }

    @@keyframes progress-bar-stripes {
        0% {
            background-position: 0 0;
        }

        100% {
            background-position: 20px 0;
        }
    }

    .progress-percentage {
        font-weight: 600;
        color: #333;
        font-size: 12px;
        min-width: 35px;
        text-align: right;
    }

    .location-info {
        color: #666;
        font-size: 13px;
        margin-top: 5px;
    }
</style>

<div class="director-container">
    <div class="director-main-content">
        <div class="page-header">
            <h1 class="page-title">Project Overview</h1>
        </div>
        <hr />
        <center><h2 class="project-banner">In-Progress Projects</h2></center>
        <hr />
        @{
            var inProgressProjects = Model.Where(p => p.Status == "In Progress").ToList();
        }

        @if (inProgressProjects.Any())
        {
            <div class="director-projects-grid">
                @foreach (var project in inProgressProjects)
                {
                    <div class="director-project-card">
                        <div class="project-title">@project.Name</div>
                        <div class="project-meta">
                            Created: @project.Startdate.ToString("MMMM dd, yyyy") |
                            Deadline: @project.Enddate.ToString("MMMM dd, yyyy")
                        </div>
                        <div class="location-info">
                            Location: @project.Location
                        </div>
                        <div class="progress-container">
                            <span class="progress-label">Progress:</span>
                            <div class="progress-bar-wrapper">
                                <div class="progress-bar-container">
                                    <div class="progress-bar @((project.Progress ?? 0) >= 100 ? "complete" : (project.Progress ?? 0) >= 75 ? "high-progress" : (project.Progress ?? 0) >= 50 ? "medium-progress" : "low-progress")" style="width: @(project.Progress ?? 0) % "></div>
                                </div>
                                <span class="progress-percentage">@(project.Progress ?? 0)%</span>
                            </div>
                        </div>
                        <div class="action-buttons">
                            <a class="btn btn-primary" href="@Url.Action("ViewTask", "Task", new { projectId = project.Id })">View Task</a>
                            <a class="btn btn-primary" href="@Url.Action("Dashboard", "Project", new { projectId = project.Id })">View Project</a>
                        </div>
                    </div>
                }
            </div>
        }
        else
        {
            <p style="text-align: center; color: gray;">No in-progress projects available.</p>
        }

        <hr />
        <center><h2 class="project-banner">Waiting Projects</h2></center>
        <hr />
        @{
            var waitingProjects = Model.Where(p => p.Status == "InWaiting").ToList();
        }

        @if (waitingProjects.Any())
        {
            <div class="director-projects-grid">
                @foreach (var project in waitingProjects)
                {
                 
                        <div class="director-project-card">
                            <div class="project-title">@project.Name</div>
                            <div class="project-meta">
                                Created: @project.Startdate.ToString("MMMM dd, yyyy") |
                                Deadline: @project.Enddate.ToString("MMMM dd, yyyy")
                            </div>
                            <div class="location-info">
                                Location: @project.Location
                            </div>
                            <div class="progress-container">
                                <span class="progress-label">Progress:</span>
                                <div class="progress-bar-wrapper">
                                    <div class="progress-bar-container">
                                        <div class="progress-bar @((project.Progress ?? 0) >= 100 ? "complete" : (project.Progress ?? 0) >= 75 ? "high-progress" : (project.Progress ?? 0) >= 50 ? "medium-progress" : "low-progress")" style="width: @(project.Progress ?? 0) % "></div>
                                    </div>
                                    <span class="progress-percentage">@(project.Progress ?? 0)%</span>
                                </div>
                            </div>
                            <div class="action-buttons">
                                <a class="btn btn-primary" href="@Url.Action("ViewTask", "Task", new { projectId = project.Id })">View Task</a>
                                <a class="btn btn-primary" href="@Url.Action("Dashboard", "Project", new { projectId = project.Id })">View Project</a>
                            </div>
                        </div>
                 
                }
            </div>
        }
        else
        {
            <p style="text-align: center; color: gray;">No waiting projects available.</p>
        }


        <hr />
        <center><h2 class="project-banner">Complete Projects</h2></center>
        <hr />

        @{
            var completeProjects = Model.Where(p => p.Status == "Complete").ToList();
        }

        @if (completeProjects.Any())
        {
            <div class="director-projects-grid">
                @foreach (var project in completeProjects)
                {
                  
                       
                            <div class="director-project-card">
                                <div class="project-title">@project.Name</div>
                                <div class="project-meta">
                                    Created: @project.Startdate.ToString("MMMM dd, yyyy") |
                                    Deadline: @project.Enddate.ToString("MMMM dd, yyyy")
                                </div>
                                <div class="location-info">
                                    Location: @project.Location
                                </div>
                                <div class="progress-container">
                                    <span class="progress-label">Progress:</span>
                                    <div class="progress-bar-wrapper">
                                        <div class="progress-bar-container">
                                            <div class="progress-bar @((project.Progress ?? 0) >= 100 ? "complete" : (project.Progress ?? 0) >= 75 ? "high-progress" : (project.Progress ?? 0) >= 50 ? "medium-progress" : "low-progress")" style="width: @(project.Progress ?? 0) % "></div>
                                        </div>
                                        <span class="progress-percentage">@(project.Progress ?? 0)%</span>
                                    </div>
                                </div>
                                <div class="action-buttons">
                                    <a class="btn btn-primary" href="@Url.Action("ViewTask", "Task", new { projectId = project.Id })">View Task</a>
                                    <a class="btn btn-primary" href="@Url.Action("Dashboard", "Project", new { projectId = project.Id })">View Project</a>
                                </div>
                            </div>
                        
                  
                }
            </div>
        }
        else
        {
            <p style="text-align: center; color: gray;">No completed projects available.</p>
        }

    </div>
</div>