@model WebSpaceApp.Models.DashboardViewModel
@{
    ViewData["Title"] = "Projects Management";
    Layout = "~/Views/Shared/_Layout.cshtml";
    var userName = Context.Session.GetString("UserName");
    var projectId = Context.Session.GetString("ProjectId");
}

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>ProBuild Dashboard</title>
    <style>
        * {
            box-sizing: border-box;
        }

        body {
            font-family: Arial, sans-serif;
            margin: 0;
            padding: 0;
            background-color: #f5f5f5;
        }

        .container {
            display: flex;
            min-height: calc(100vh - 100px); 
            width: 100vw; 
        }

        .sidebar {
            width: 220px;
            background-color: whitesmoke;
            color: #fff;
            display: flex;
            flex-direction: column;
            padding: 20px;
        }

            .sidebar .logo {
                font-size: 22px;
                font-weight: bold;
                margin-bottom: 30px;
                color: black;
            }

            .sidebar .nav-list {
                list-style: none;
                padding: 0;
                margin: 0;
                flex-grow: 1;
            }

                .sidebar .nav-list li {
                    padding: 12px 10px;
                    margin-bottom: 8px;
                    border-radius: 4px;
                    cursor: pointer;
                    transition: background 0.2s;
                }

                    .sidebar .nav-list li:hover,
                    .sidebar .nav-list li.active {
                        background-color: #ff8c00;
                        color: #212529;
                        font-weight: bold;
                    }


        .content {
            flex: 1;
            padding: 20px;
            background-color: #ffffff;
            max-height: calc(100vh - 100px);
            overflow-y: auto; 
        }

        .header {
            display: flex;
            justify-content: space-between;
            align-items: center;
            margin-bottom: 20px;
        }

        .metrics {
            display: grid;
            grid-template-columns: repeat(4, 1fr);
            gap: 20px;
        }

        .metric-card {
            background-color: white;
            padding: 20px;
            border-radius: 8px;
            text-align: center;
            box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);
        }

            .metric-card h3 {
                margin: 0;
                color: #555;
                font-size: 16px;
            }

            .metric-card p {
                margin: 10px 0 0;
                font-size: 24px;
                color: #333;
            }

            .metric-card span {
                color: green;
                font-size: 15px;
            }

        .chart-section, .recent-section {
            background-color: white;
            padding: 20px;
            border-radius: 8px;
            margin-top: 20px;
            box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);
        }

        .chart {
            height: 200px;
        }

        .recent-item {
            display: flex;
            justify-content: space-between;
            padding: 10px 0;
            border-bottom: 1px solid #eee;
        }

            .recent-item span {
                color: #888;
            }

        select {
            padding: 5px;
            border-radius: 4px;
        }
    </style>
    <script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
</head>
<body>
    <div class="container"> 


        <div class="content">
            <div class="header">
                <h4>DASHBOARD</h4>
               <div>
                    <h4> @Model.ProjectName</h4>
               </div>
            </div>
            <div class="metrics">
                <div class="metric-card">
                    <h4>Total Tasks</h4>
                    <p>@Model.TotalTasks</p>
                </div>
                <div class="metric-card">
                    <h3>InComplete Tasks</h3>
                    <p>@Model.InWaitingTasks</p>
                </div>
                <div class="metric-card">
                    <h3>InProgress Tasks</h3>
                    <p>@Model.InProgressTasks</p>
                </div>
                <div class="metric-card">
                    <h3>Complete Tasks</h3>
                    <p>@Model.CompletedTasks</p>
                </div>

            </div>


            <script src="https://cdn.jsdelivr.net/npm/chart.js"></script>

            <div style="text-align: center;">
                <br />
                <hr />
                <h3 style="font-family:'Gill Sans', 'Gill Sans MT', Calibri, 'Trebuchet MS', sans-serif">Task Metrics</h3>
                <div style="width: 310px; height: 200px; margin: 0 auto;">
                    <canvas id="taskChart"></canvas>
                </div>
            </div>

            <script>
                const ctx = document.getElementById('taskChart').getContext('2d');
                const taskChart = new Chart(ctx, {
                    type: 'doughnut',
                    data: {
                         labels: ['Complete', 'In Progress', 'InWaiting'],
                        datasets: [{
                            label: 'Task Share',
                            data: [
                        @Model.CompletedTasks,
                        @Model.InProgressTasks,
                        @Model.InWaitingTasks
                    ],
                            backgroundColor: [
                               
                                '#41d964', // Orange
                                '#90a4ae', // Gray blue
                                '#fbc02d'  // Gold
                            ],
                            borderColor: '#fff',
                            borderWidth: 2,
                            hoverOffset: 10
                        }]
                    },
                    options: {
                        responsive: true,
                        maintainAspectRatio: false,
                        cutout: '60%', // Donut size
                        plugins: {
                            legend: {
                                position: 'right',
                                labels: {
                                    color: '#333',
                                    font: {
                                        size: 13
                                    },
                                    padding: 16
                                }
                            },
                            tooltip: {
                                callbacks: {
                                    label: function (context) {
                                        return `${context.label}: ${context.parsed}%`;
                                    }
                                }
                            }
                        },
                        animation: {
                            animateScale: true,
                            animateRotate: true
                        }
                    }
                });
            </script>

            <div class="recent-section">
                <h3>Task Details by Status</h3>
                <p>A detailed view of all tasks, categorized by their current status.</p>

                @foreach (var statusGroup in Model.TasksByStatus)
                {
                    <div class="metric-card">
                        <h4>@statusGroup.Key Tasks (@statusGroup.Value.Count)</h4>
                        @if (statusGroup.Value.Any())
                        {
                            <ul style="list-style-type: none; padding: 0;">
                                @foreach (var task in statusGroup.Value)
                                {
                                    <li style="border-bottom: 1px solid #eee; padding: 10px 0;">
                                        <strong>@task.Description</strong><br />
                                        Progress: @task.Progress%<br />
                                        Start: @task.StartDate.ToString("MMM dd, yyyy")<br />
                                        End: @task.EndDate.ToString("MMM dd, yyyy")
                                    </li>
                                }
                            </ul>
                        }
                        else
                        {
                            <p>No tasks found in this category.</p>
                        }
                    </div>
                }
            </div>
        </div>
    </div>
    @* <script>

        const taskCtx = document.getElementById('taskChart').getContext('2d');



           const taskChart = new Chart(taskCtx, {
            type: 'doughnut',  // <-- Corrected from 'donut'
            data: {
                labels: ['Complete', 'In Progress', 'InWaiting'],
                datasets: [{
                    label: 'Task Stats',
                    data: [
                        @Model.CompletedTasks,
                        @Model.InProgressTasks,
                        @Model.InWaitingTasks
                    ],
                    backgroundColor: ['#1abc9c', '#e67e22', '#95a5a6'],
                    borderColor: '#333',
                    borderWidth: 1
                }]
            },
            options: {
                responsive: true,
                cutout: '40%',  // adjust hole size for doughnut
                plugins: {
                    legend: {
                        position: 'bottom'
                    }
                }
            }
        });


    </script> *@
</body>
</html>